name: new

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: windows-latest

    env:
      USERNAME: ${{ secrets.IIS_USER }}
      PASSWORD: ${{ secrets.IIS_PASSWORD }}
      SERVER: ${{ secrets.IIS_SERVER }}
      API_POOL: ${{ secrets.API_APP_POOL }}
      WEB_POOL: ${{ secrets.WEB_APP_POOL }}

    steps:
      - name: üîÑ Checkout code
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: üì¶ Restore NuGet packages
        run: dotnet restore TaxFiling.sln

      - name: üõ†Ô∏è Build solution
        run: dotnet build TaxFiling.sln --configuration Release --no-restore

      - name: üß™ Run tests
        run: dotnet test TaxFiling.sln --no-build --verbosity normal

      - name: üöÄ Publish API
        run: dotnet publish ./TaxFiling.API/TaxFiling.API.csproj -c Release -o ./publish/API

      - name: üöÄ Publish Web
        run: dotnet publish ./TaxFiling.Web/TaxFiling.Web.csproj -c Release -o ./publish/Web

      - name: üóúÔ∏è Compress Published Folders
        run: |
          Compress-Archive -Path ./publish/API/* -DestinationPath api.zip
          Compress-Archive -Path ./publish/Web/* -DestinationPath web.zip

      - name: üîª Stop IIS App Pools (API & Web)
        shell: powershell
        run: |
               $secpasswd = ConvertTo-SecureString $env:PASSWORD -AsPlainText -Force
               $creds = New-Object System.Management.Automation.PSCredential($env:USERNAME, $secpasswd)

               $apiPool = $env:API_POOL
               $webPool = $env:WEB_POOL

               Invoke-Command -ComputerName $env:SERVER -Credential $creds -ScriptBlock {
               param($apiPoolName, $webPoolName)
               Import-Module WebAdministration
               Stop-WebAppPool -Name $apiPoolName
               Stop-WebAppPool -Name $webPoolName
               } -ArgumentList $apiPool, $webPool

      - name: üì§ Copy ZIP Files to IIS
        shell: powershell
        run: |
          net use \\$env:SERVER\TaxfilingAPI /user:$env:USERNAME $env:PASSWORD
          net use \\$env:SERVER\TaxfilingWeb /user:$env:USERNAME $env:PASSWORD

          Copy-Item api.zip "\\$env:SERVER\TaxfilingAPI\api.zip" -Force
          Copy-Item web.zip "\\$env:SERVER\TaxfilingWeb\web.zip" -Force

          net use \\$env:SERVER\TaxfilingAPI /delete
          net use \\$env:SERVER\TaxfilingWeb /delete

      - name: üì¶ Unzip Files on IIS Server
        shell: powershell
        run: |
          $secpasswd = ConvertTo-SecureString $env:PASSWORD -AsPlainText -Force
          $creds = New-Object System.Management.Automation.PSCredential($env:USERNAME, $secpasswd)

          Invoke-Command -ComputerName $env:SERVER -Credential $creds -ScriptBlock {
            Expand-Archive -Path "C:\Taxfiling\TaxfilingAPI\api.zip" -DestinationPath "C:\Taxfiling\TaxfilingAPI" -Force
            Expand-Archive -Path "C:\Taxfiling\TaxfilingWeb\web.zip" -DestinationPath "C:\Taxfiling\TaxfilingWeb" -Force
          }

      - name: üîº Start IIS App Pools (API & Web)
        shell: powershell
        run: |
          $secpasswd = ConvertTo-SecureString $env:PASSWORD -AsPlainText -Force
          $creds = New-Object System.Management.Automation.PSCredential($env:USERNAME, $secpasswd)

          Invoke-Command -ComputerName $env:SERVER -Credential $creds -ScriptBlock {
            Import-Module WebAdministration
            Start-WebAppPool -Name $using:API_POOL
            Start-WebAppPool -Name $using:WEB_POOL
          }
