﻿
<main class="cal">
    <div class="page-title accent-background">
        <div class="container d-lg-flex justify-content-between align-items-center">
            <h2 class="mb-2 mb-lg-0 mb-2 mb-lg-0 font-weight-bold">Tax Calculator</h2>
            <nav class="breadcrumbs">
                <ol>
                </ol>
            </nav>
        </div>
    </div>
    <div class="container">
        <br>
        <br>
        <ul class="nav nav-tabs" id="myTab" role="tablist">
          <li class="nav-item" role="presentation">
                <button class="nav-link active" id="contact-tab" data-bs-toggle="tab" data-bs-target="#contact" type="button" role="tab" aria-controls="profile" aria-selected="true">Total Individual Income Tax</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button" role="tab" aria-controls="home" aria-selected="false" tabindex="-1">Domestic Employment (APIT / PAYE)</button>
            </li>

            <li class="nav-item" role="presentation">
                <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab" aria-controls="profile" aria-selected="false" tabindex="-1">Foreign Income</button>
            </li>
          

        </ul>
        <div class="tab-content mt-3" id="myTabContent">
            <div class="tab-pane fade domestic " id="home" role="tabpanel" aria-labelledby="home-tab">


                <div class="wrap Domestic">
                    <h1 class="h1">APIT / PAYE Salary Tax Estimator <span style="white-space:nowrap">– Effective 01.04.2025</span></h1>
                    <!-- <p class="subtitle">Calculate <strong>PAYE / APIT</strong> on your <strong>Local Salary</strong> (Sri Lanka)</p>-->
                    <p class="muted" style="text-align:center;max-width:760px;margin:0 auto 24px">
                        This calculator gives you an estimate of the Advance Personal Income Tax (APIT/PAYE) on your local salary in Sri Lanka. It is designed to give you a quick idea of the possible tax on your monthly or annual salary.
                    </p>
                    <br>
                              <p class="muted" style="text-align:center;max-width:760px;margin:0 auto 24px">
                         Please note that this is only a guide. Your final tax liability may be different once other employment benefits such as bonuses, allowances, and non-cash benefits are included under Inland Revenue rules.
                    </p>


                    <div class="card">
                        <div class="panel">
                            <!-- <h2 style="text-align:center;margin:0 0 8px">Local Tax Calculator</h2> -->

                            <div>
                                <label for="monthlyIncome">Montly Gross Employment Income </label>
                                <input id="monthlyIncome" class="input" inputmode="numeric" placeholder="e.g., 25000*12" />
                                 <!-- <div class="note" style="margin-top:8px">Formatting with commas is OK. Calculator updates as you type.</div> -->
                            </div>

                            <div class="grid">
                                <div class="tile">
                                    <h4>Monthly Summary</h4>
                                    <div class="muted" style="margin-top:8px">Employment Income </div>
                                    <div class="big" id="outMonthlyIncome">Rs. 0</div>
                                    <div class="muted" style="margin-top:8px">APIT/PAYE</div>
                                    <div class="big" id="outMonthlyTax">Rs. 0.00</div>
                                </div>
                                <div class="tile">
                                    <h4>Annual Summary</h4>
                                    <div class="muted" style="margin-top:8px">Employment Income </div>
                                    <div class="big" id="outAnnualIncome">Rs. 0</div>
                                    <div class="muted" style="margin-top:8px">APIT/PAYE</div>
                                    <div class="big" id="outAnnualTax">Rs. 0.00</div>
                                </div>
                            </div>

                            <div class="tile" style="background:#fff">
                                <div style="display:flex;align-items:center;gap:8px;justify-content:space-between;margin-bottom:10px">
                                    <div>
                                        <strong>Monthly Salary (Annual / 12)</strong>
                                        <span class="tag" title="Tax-free monthly relief">Relief: Rs <span id="reliefTag">150,000</span></span>
                                    </div>
                                </div>

                                <div class="tableWrap">
                                    <table aria-describedby="breakdown">
                                        <thead>
                                            <tr>
                                                <th>Tax Bracket</th>
                                                <th>Taxable Income</th>
                                                <th>Tax Rate</th>
                                                <th>Tax Amount</th>
                                            </tr>
                                        </thead>
                                        <tbody id="rows01"></tbody>
                                        <tfoot>
                                            <tr>
                                                <td colspan="3">Monthly APIT</td>
                                                <td id="monthlyTotal">Rs. 0.00</td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            </div>

                            <div style="text-align:center">
                                <button id="resetBtn" class="btn" type="button" aria-label="Reset calculator">
                                    <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true"><path d="M21 12a9 9 0 1 1-2.64-6.36" stroke="currentColor" stroke-width="2" stroke-linecap="round" /><path d="M21 3v6h-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" /></svg>
                                    Reset Calculator
                                </button>
                            </div>

                         <!--   <p class="note" style="margin:6px 2px 0">Assumptions: relief of <strong>Rs 1,800,000</strong> per year (Rs 150,000 monthly). Post‑relief bands (annual): next 1,000,000 @@ 6%; next 1,500,000 @@ 18%; next 1,500,000 @@ 24%; next 1,500,000 @@ 30%; balance @@ 36%. You can change bands in code easily.</p>-->
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade  cal-foreing" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                <div class="page foreing">
                    <h1>Foreign Employment & Overseas Income – APIT Table 8 (Effective 01.04.2025)</h1>

                    <div class="grid g-2">
                        <!-- Inputs -->
                        <div class="card">
                            <div class="grid g-3">
                                <div>
                                    <label>Period</label>
                                    <select id="period">
                                        <option value="monthly" selected>Monthly</option>
                                        <option value="annual">Annual</option>
                                    </select>
                                </div>
                                <div>
                                    <label>Salary in Foreign Currency</label>
                                    <input id="salaryFC" type="number" step="0.01" value="3000">
                                </div>
                                <div>
                                    <label>FX Rate (LKR per 1 FC unit)</label>
                                    <input id="fx" type="number" step="0.0001" value="305">
                                </div>
                            </div>

                            <div class="grid g-3" style="margin-top:12px">
                                <div>
                                    <label>Salary in LKR (auto)</label>
                                    <input id="salaryLKR" type="number" step="0.01" value="915000" disabled>
                                </div>
                                <div>
                                    <label>Personal Relief (LKR)</label>
                                    <input id="relief" type="number" step="0.01" value="150000">
                                    <div class="foot">Tip: Monthly 150,000 → Annual 1,800,000.</div>
                                </div>
                                <div>
                                    <label>Rounding</label>
                                    <select id="round">
                                        <option value="nearest" selected>Nearest Rupee</option>
                                        <option value="down">Round Down</option>
                                        <option value="up">Round Up</option>
                                    </select>
                                </div>
                            </div>

                            <div class="grid" style="margin-top:14px">
                                <div class="pill">Eligibility (Table 8) – ensure all true:</div>
                                <ul class="muted" style="margin:8px 0 0 18px;line-height:1.35">
                                    <li>Employer is <b>outside Sri Lanka</b> (no PE/branch in SL).</li>
                                    <li>Services are <b>utilized outside Sri Lanka</b>.</li>
                                    <li>Salary is <b>paid in foreign currency</b> and <b>remitted via a licensed Sri Lankan bank</b>.</li>
                                </ul>
                            </div>
                        </div>

                        <!-- Slabs -->
                        <div class="card">
                            <div class="right">
                                <button class="btn secondary" id="addSlab">+ Add slab</button>
                                <button class="btn secondary" id="resetSlabs">Reset to Table 8</button>
                            </div>
                            <div class="foot">Define slabs from lowest upwards. Last row “Above” applies to the balance.</div>
                            <table id="slabTable" style="margin-top:8px">
                                <thead>
                                    <tr>
                                        <th>Upto (LKR)</th>
                                        <th>Rate</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="slabs"></tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Results -->
                    <div class="card" style="margin-top:16px">
                        <div class="grid g-3">
                            <div><div class="muted">Gross Income</div><div class="big mono" id="rGross">—</div></div>
                            <div><div class="muted">Taxable (after relief)</div><div class="big mono" id="rTaxable">—</div></div>
                            <div><div class="muted">Monthly/Annual Tax</div><div class="big mono" id="rTax">—</div></div>
                        </div>
                        <div class="grid" style="margin-top:10px">
                            <table id="breakdown">
                                <thead>
                                    <tr>
                                        <th>Slab</th>
                                        <th>Taxable in Slab (LKR)</th>
                                        <th>Rate</th>
                                        <th>Tax (LKR)</th>
                                    </tr>
                                </thead>
                                <tbody id="rows"></tbody>
                                <tfoot>
                                    <tr>
                                        <th colspan="3" style="text-align:right">Total Tax</th>
                                        <th id="sumTax" class="mono">—</th>
                                    </tr>
                                </tfoot>
                            </table>
                            <div class="grid g-3">
                                <div><div class="muted">Annual Tax Liability</div><div class="big mono" id="rAnnual">—</div></div>
                                <div><div class="muted">Effective Tax Rate</div><div class="big mono" id="rEff">—</div></div>
                                <div style="align-self:end;text-align:right">
                                    <button class="btn" id="recalc">Recalculate</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <p class="foot">
                        Notes: This tool computes APIT for Table 8 based on the slabs you set. Tax is calculated on
                        <i>Taxable Income = Gross Income − Relief</i>. Results are informational only.
                    </p>
                </div>



            </div>
            <div class="tab-pane fade active show" id="contact" role="tabpanel" aria-labelledby="contact-tab">
                <div class="sheet">
                    <h1>Calculate Your Income Tax Liability – Year of Assessment 2025/2026 </h1>
                    <br>
                   


                    <!-- ================= 1) INCOME SOURCES ================= -->
                    <table class="grid" id="tblIncome">
                        <thead><tr><th>Sources of Income</th><th class="num">Amount (LKR)</th></tr></thead>
                        <tbody>
                            <tr>
                                <td class="lbl">Employment Income – <span class="muted">Local (APIT deducted)</span></td>
                                <td class="num"><input id="emp_apit_annual" type="text" inputmode="decimal" value="0"></td>
                            </tr>

                            <!-- Foreign employment: Annual amount + currency + FX (one line) -->
                            <tr class="band-soft">
                                <td class="lbl one-line-thre">
                                <div class="one-line-two">
                                    Employment Income – <span class="muted">Foreign</span></div>
                                    <div class="controls one-line" style="margin:6px 0 2px">
                                        
                                        <input id="foreign_amount_annual" type="text" inputmode="decimal" value="0" style="max-width:200px">
                                        <select id="foreign_currency" style="max-width:110px">
                                            <option>USD</option>  
                                        </select>
                                        
                                        <input id="fx_rate" type="text" inputmode="decimal" value="300" style="max-width:120px">
                                    </div>
                                    <small class="note">If your figure is already in LKR, set FX to <b>1</b>.</small>
                                </td>
                                <td class="num"><span id="foreign_lkr_annual" class="mono">0.00</span></td>
                            </tr>

                            <tr>
                                <td class="lbl">Business / Professional Income – <span class="muted">Annual profit</span></td>
                                <td class="num"><input id="biz_profit_annual" type="text" inputmode="decimal" value="0"></td>
                            </tr>

                            <tr>
                                <td class="lbl">Investment Income – Interest</td>
                                <td class="num"><input id="interest_gross_annual" type="text" inputmode="decimal" value="0"></td>
                            </tr>
                            <tr>
                                <td class="lbl">Other Investment Income<span class="muted"> (WHT not dedcted)</span></td>
                                <td class="num"><input id="invest_other_annual" type="text" inputmode="decimal" value="0"></td>
                            </tr>
                            <tr>
                                <td class="lbl">Investment Income – Rent (gross)</td>
                                <td class="num"><input id="rent_gross_annual" type="text" inputmode="decimal" value="0"></td>
                            </tr>

                            <tr>
                                <td class="lbl">Investment Income – Dividend <span class="muted">(Final Tax 15%)</span></td>
                                <td class="num"><input id="dividend_gross_annual" type="text" inputmode="decimal" value="0"></td>
                            </tr>

                            <tr>
                                <td class="lbl">Other Income</td>
                                <td class="num"><input id="other_income_annual" type="text" inputmode="decimal" value="0"></td>
                            </tr>

                            <tr class="band">
                                <td class="lbl"><b>Just Important point is Total Assessable Income</b> <span class="muted">(excludes dividends)</span></td>
                                <td class="num kpi" id="kpi_assessable">0.00</td>
                            </tr>
                        </tbody>
                    </table>

                    <!-- ================= 2) DEDUCTIONS ================= -->
                    <h3 class="section-title nothi">Deduction From Assessable Income </h3>
                    <table class="grid" id="tblDeduct">
                        <thead><tr><th>Relief / Deduction</th><th class="num">Amount (LKR)</th></tr></thead>
                        <tbody>
                            <tr>
                                <td class="lbl">Personal Relief</td>
                                <td class="num"><input id="relief_personal" type="text" inputmode="decimal" value="1800000"></td>
                            </tr>
                            <tr>
                                <td class="lbl">Relief for Rent Income <span class="muted">(auto 25% of gross)</span></td>
                                <td class="num"><span id="relief_rent_auto" class="mono">0.00</span></td>
                            </tr>
                            <tr>
                                <td class="lbl">Solar Relief <span class="muted">(cap 600,000)</span></td>
                                <td class="num"><input id="relief_solar" type="text" inputmode="decimal" value="0"></td>
                            </tr>
                            <tr>
                                <td class="lbl">Qualifying Payments &amp; Other Deductions</td>
                                <td class="num"><input id="relief_qualifying" type="text" inputmode="decimal" value="0"></td>
                            </tr>

                            <tr class="band-soft">
                                <td class="lbl"><b>Total Relief</b></td>
                                <td class="num kpi" id="kpi_deductions">1,800,000.00</td>
                            </tr>
                            <tr class="band">
                                <td class="lbl"><b>Just Important point is Taxable Income </b></td>
                                <td class="num kpi" id="kpi_taxable">0.00</td>
                            </tr>
                        </tbody>
                    </table>

                    <!-- ================= 3) TAX CALCULATION ================= -->
                    <h3 class="section-title nothi">Tax Calculation</h3>
                    <table class="grid" id="tblSlabs">
                        <thead><tr><th>Tax Bracket</th><th class="num">Taxable Income</th><th class="num">Tax Rate</th><th class="num">Tax Amount</th></tr></thead>
                        <tbody id="slab_body"></tbody>
                        <tfoot>
                            <tr class="band-soft">
                                <td class="lbl"><b>Just Important point is Total <strong>Tax Liability</strong></b></td>
                                <td></td>
                                <td></td>
                                <td class="num kpi" id="kpi_tax_liability">0.00</td>
                            </tr>
                        </tfoot>
                    </table>

                    <!-- ================= 4) CREDITS & RESULT ================= -->
                    <h3 class="section-title nothi">Tax Credits (Deductions From Total Tax Liability)</h3>
                    <table class="grid" id="tblLiab">
                        <tbody>
                            <tr>
                                <td class="lbl">Less: APIT Deducted by Employer </td>
                                <td class="num"><span id="credit_apit_auto" class="mono">0.00</span></td>
                            </tr>
                            <tr>
                                <td class="lbl">Less: WHT on Interest <span class="muted">(10% of interest income)</span></td>
                                <td class="num"><span id="credit_wht_interest_auto" class="mono">0.00</span></td>
                            </tr>
                            <tr class="band">
                                <td class="lbl totals">Final Income Tax Payable / (Refundable)</td>
                                <td class="num totals pos" id="sum_net">0.00</td>
                            </tr>
                        </tbody>
                    </table>

                    <!-- Dividend info (final tax shown separately; not part of liability/credits) -->
                    <table class="grid" style="margin-top:8px">
                        <tbody>
                            <tr>
                                <td class="lbl">Dividend Final Tax (15%)</td>
                                <td class="num" id="sum_div15">0.00</td>
                            </tr>
                        </tbody>
                    </table>

                    <!-- Effective Tax Rate -->
                    <table class="grid" style="margin-top:8px">
                        <tbody>
                            <tr>
                                <td class="lbl">Effective Tax Rate</td>
                                <td class="num" id="sum_eff">0.00%</td>
                            </tr>
                        </tbody>
                    </table>

                    <!-- ===== Controls at the very bottom ===== -->
                    <div class="controls" style="justify-content:center; margin-top:20px">
                       <!-- <button class="btn" id="btn_calc" type="button">Calculate</button>-->
                        <button class="btn" id="btn_reset" type="button">Reset</button>
                    </div>
                </div>

            </div>
        </div>

    </div>
</main>

<script>
    // ===== helpers =====
    const q = id => document.getElementById(id);
    const fmt = (n) => (n??0).toLocaleString(undefined,{maximumFractionDigits:2,minimumFractionDigits:2});
    const money = fmt;
    const fromMoney = (s) => { const v = (typeof s==='number')? s : Number(String(s).replace(/[^0-9.-]/g,'')); return isNaN(v)?0:v; };
    const getN = id => fromMoney(q(id)?.value||0);


    const SLABS_AFTER6_LOCAL = [
      {cap: 500_000, rate: 0.18, label:'Next 500,000'},
      {cap: 500_000, rate: 0.24, label:'Next 500,000'},
      {cap: 500_000, rate: 0.30, label:'Next 500,000'},
      {cap: Infinity, rate: 0.36, label:'Balance'}
    ];

    function slabOtherAfter6(amount){
      let rem = Math.max(0, amount), tax=0, rows=[];
      for(const s of SLABS_AFTER6_LOCAL){
        const portion = Math.min(rem, s.cap);
        if(portion<=0) break;
        const rowTax = portion*s.rate;
        rows.push({label:s.label, portion, rate:s.rate, tax:rowTax});
        tax += rowTax; rem -= portion;
      }
      return {tax, rows};
    }

    function calc(){
      // Inputs
      const empLocal = getN('emp_apit_annual');

      // Foreign annual (one line) with currency & FX
      const foreignAnnualInput = fromMoney(q('foreign_amount_annual').value)||0;
      const fxEntered = fromMoney(q('fx_rate').value);
      const fx = (fxEntered && fxEntered>0) ? fxEntered : 1;
      const foreignAnnual = foreignAnnualInput * fx;
      q('foreign_lkr_annual').textContent = fmt(foreignAnnual);

      const biz = getN('biz_profit_annual');
      const interest = getN('interest_gross_annual');
      const rent = getN('rent_gross_annual');
      const divi = getN('dividend_gross_annual');
      const investOther = getN('invest_other_annual');
      const otherInc = getN('other_income_annual');

      // Assessable (dividends excluded from slabs)
      const assessable = empLocal + foreignAnnual + biz + interest + rent + investOther + otherInc;
      q('kpi_assessable').textContent = fmt(assessable);

      // Deductions
      const personal = getN('relief_personal');
      const rentRelief = (rent*0.25);
      q('relief_rent_auto').textContent = fmt(rentRelief);

      const solarInput = getN('relief_solar');
      const solar = Math.min(solarInput, 600_000);
      if (solarInput !== solar) q('relief_solar').value = money(solar); // clamp to cap

      const qualifying = getN('relief_qualifying');

      const totalDeductions = Math.max(personal + rentRelief + solar + qualifying, 0);
      q('kpi_deductions').textContent = fmt(totalDeductions);

      const taxable = Math.max(assessable - totalDeductions, 0);
      q('kpi_taxable').textContent = fmt(taxable);

      // Split taxable between foreign and other for RULES
      // Apply all deductions to LOCAL first (max benefit), then any leftover to FOREIGN
      const assessLocal = empLocal + biz + interest + rent + investOther + otherInc;
      const assessForeign = foreignAnnual;

      const dedToLocal = Math.min(totalDeductions, assessLocal);
      const localAfterDed = Math.max(assessLocal - dedToLocal, 0);
      const dedLeft = Math.max(totalDeductions - dedToLocal, 0);
      const foreignAfterDed = Math.max(assessForeign - dedLeft, 0);

      const taxableTotal = localAfterDed + foreignAfterDed; // should equal 'taxable'
      q('kpi_taxable').textContent = fmt(taxableTotal);

      // ---- Unified slabs: 6% first 1M (allocated to LOCAL first), then 15% (foreign-only), then 18%/24%/30%/36% for remaining LOCAL
      const first6Cap = Math.min(taxableTotal, 1_000_000);
      const p6_local = Math.min(localAfterDed, first6Cap);
      const p6_foreign = Math.max(first6Cap - p6_local, 0);
      const tax6 = first6Cap * 0.06;

      const remainingLocal = Math.max(localAfterDed - p6_local, 0);
      const remainingForeign = Math.max(foreignAfterDed - p6_foreign, 0);

      // 15% special applies only to remaining FOREIGN portion
      const p15 = remainingForeign;
      const tax15 = p15 * 0.15;

      // Local portion continues at 18%+ slabs
      const resLocal = slabOtherAfter6(remainingLocal);

      const taxLiability = tax6 + tax15 + resLocal.tax;
      q('kpi_tax_liability').textContent = fmt(taxLiability);

      // Build rows for display: 6% then 15% (if any) then 18%+
      const tbody = q('slab_body'); tbody.innerHTML='';

      if (first6Cap > 0){
        const tr6 = document.createElement('tr');
        tr6.innerHTML = `<td class="lbl">First 1,000,000</td>
                         <td class="num">${fmt(first6Cap)}</td>
                         <td class="num">6%</td>
                         <td class="num">${fmt(tax6)}</td>`;
        tbody.appendChild(tr6);
      }

      if (p15 > 0){
        const tr15 = document.createElement('tr');
        tr15.innerHTML = `<td class="lbl">15% (Foreign only)</td>
                          <td class="num">${fmt(p15)}</td>
                          <td class="num">15%</td>
                          <td class="num">${fmt(tax15)}</td>`;
        tbody.appendChild(tr15);
      }

      resLocal.rows.forEach(r=>{
        const tr = document.createElement('tr');
        tr.innerHTML = `<td class="lbl">${r.label}</td>
                        <td class="num">${fmt(r.portion)}</td>
                        <td class="num">${(r.rate*100).toFixed(0)}%</td>
                        <td class="num">${fmt(r.tax)}</td>`;
        tbody.appendChild(tr);
      });

      // Dividend final tax (15%) — shown separately (not part of liability/credits)
      const divTax = divi * 0.15;
      q('sum_div15').textContent = fmt(divTax);

      // ===== APIT (auto) =====
      // APIT = tax on Local Employment Income after personal relief ONLY (normal slabs)
      const apitTaxable = Math.max(empLocal - personal, 0);
      const apitLocal6 = Math.min(apitTaxable, 1_000_000) * 0.06;
      const apitLocalRest = Math.max(apitTaxable - 1_000_000, 0);
      const apitRes = slabOtherAfter6(apitLocalRest);
      const apit = apitLocal6 + apitRes.tax;
      q('credit_apit_auto').textContent = fmt(apit);

      // WHT on interest (auto 10%)
      const whtInterest = interest * 0.10;
      q('credit_wht_interest_auto').textContent = fmt(whtInterest);



      // Credits and final
      const credits = apit + whtInterest;



      const net = taxLiability - credits; // payable (+) or refundable (-)
      q('sum_net').textContent = (net>=0?fmt(net):`(${fmt(Math.abs(net))})`);
      q('sum_net').className = 'num totals ' + (net>=0 ? 'pos' : 'neg');

      const eff = assessable>0 ? (taxLiability/assessable*100) : 0;
      q('sum_eff').textContent = `${eff.toFixed(2)}%`;
    }

    function resetAll(){
      [ 'emp_apit_annual','foreign_amount_annual','biz_profit_annual','interest_gross_annual','rent_gross_annual','dividend_gross_annual','invest_other_annual','other_income_annual','relief_solar','relief_qualifying' ].forEach(id=> q(id).value = money(0));
      q('relief_personal').value = money(1800000);
      q('foreign_currency').value = 'LKR';
      q('fx_rate').value = money(300);
      calc();
    }

    // Live updates on input/change
    document.querySelectorAll('input,select').forEach(el=>{
      el.addEventListener('input', calc);
      el.addEventListener('change', calc);
      if (el.tagName === 'INPUT') el.addEventListener('keyup', calc);
    });
    // Format money on blur for all text inputs
    function formatMoneyInputs(){ document.querySelectorAll('input[type="text"]').forEach(el=>{ el.value = money(fromMoney(el.value)); }); }
    document.querySelectorAll('input[type="text"]').forEach(el=>{ el.addEventListener('blur', ()=>{ el.value = money(fromMoney(el.value)); }); });
    document.querySelectorAll('input[type="text"]').forEach(el=>{ el.addEventListener('blur', ()=>{ el.value = money(fromMoney(el.value)); calc(); }); });
    q('btn_calc').addEventListener('click', ()=>{ formatMoneyInputs(); calc(); });
    q('btn_reset').addEventListener('click', ()=>{ resetAll(); formatMoneyInputs(); calc(); });

    // Init
    formatMoneyInputs();
    calc();
</script>


<script>
    // ---- state helpers ----
    const fmt06 = n => (isFinite(n) ? n.toLocaleString('en-LK', {maximumFractionDigits:0}) : '—');
    const fmt062 = n => (isFinite(n) ? n.toLocaleString('en-LK', {minimumFractionDigits:2, maximumFractionDigits:2}) : '—');

    const els = {
      period: document.getElementById('period'),
      salaryFC: document.getElementById('salaryFC'),
      fx: document.getElementById('fx'),
      salaryLKR: document.getElementById('salaryLKR'),
      relief: document.getElementById('relief'),
      round: document.getElementById('round'),
      addSlab: document.getElementById('addSlab'),
      resetSlabs: document.getElementById('resetSlabs'),
      slabTbody: document.getElementById('slabs'),
      recalc: document.getElementById('recalc'),
      rows: document.getElementById('rows'),
      sumTax: document.getElementById('sumTax'),
      rGross: document.getElementById('rGross'),
      rTaxable: document.getElementById('rTaxable'),
      rTax: document.getElementById('rTax'),
      rAnnual: document.getElementById('rAnnual'),
      rEff: document.getElementById('rEff')
    };

    // Default Table 8 (as per your example)
    let slabs = [
      { upto: 83333.33, rate: 6 },
      { upto: Infinity, rate: 15 }
    ];

    // ---- UI for slabs ----
    function renderSlabs(){
      els.slabTbody.innerHTML = '';
      slabs.forEach((s, i) => {
        const tr = document.createElement('tr');
        const uptoCell = document.createElement('td');
        const rateCell = document.createElement('td');
        const delCell  = document.createElement('td');
        // Inputs
        const upto = document.createElement('input');
        upto.type = 'number'; upto.step = '0.01';
        upto.value = (isFinite(s.upto) ? s.upto : '');
        upto.placeholder = (i === slabs.length - 1 ? 'Above (leave blank)' : '');
        upto.disabled = (i === slabs.length - 1); // last is "Above"
        const rate = document.createElement('input');
        rate.type='number'; rate.step='0.01'; rate.value = s.rate;
        const del = document.createElement('button');
        del.className='btn secondary'; del.textContent='Delete';
        del.onclick = () => { slabs.splice(i,1); if(!slabs.length) slabs=[{upto:Infinity,rate:0}]; // keep one
                              if(slabs[slabs.length-1].upto!==Infinity) slabs.push({upto:Infinity,rate:slabs.pop().rate});
                              renderSlabs(); calc(); };

        upto.oninput = e => { const v = parseFloat(e.target.value); slabs[i].upto = isNaN(v)?Infinity:v; calc(); };
        rate.oninput = e => { slabs[i].rate = parseFloat(e.target.value)||0; calc(); };

        uptoCell.appendChild(upto); rateCell.appendChild(rate); delCell.appendChild(del);
        tr.append(uptoCell, rateCell, delCell);
        els.slabTbody.appendChild(tr);
      });
    }

    document.getElementById('addSlab').onclick = () => {
      // insert before the last "Above" slab
      const last = slabs.pop(); // Infinity
      slabs.push({ upto: 0, rate: 0 }, last);
      renderSlabs();
    };

    document.getElementById('resetSlabs').onclick = () => {
      slabs = [
        { upto: 83333.33, rate: 6 },
        { upto: Infinity, rate: 15 }
      ];
      renderSlabs(); calc();
    };

    // ---- Calculations ----
    function rounder(mode, value){
      if(mode==='down') return Math.floor(value);
      if(mode==='up') return Math.ceil(value);
      return Math.round(value);
    }

    function calc(){
      // Salary in LKR
      const salaryFC = parseFloat(els.salaryFC.value)||0;
      const fx = parseFloat(els.fx.value)||0;
      const gross = salaryFC * fx;
      els.salaryLKR.value = fmt062(gross);

      // Relief
      const relief = parseFloat(els.relief.value)||0;
      const taxable = Math.max(0, gross - relief);

      // Walk slabs
      let remaining = taxable, lastLimit = 0, totalTax = 0;
      els.rows.innerHTML = '';
      for(let i=0;i<slabs.length;i++){
        const {upto, rate} = slabs[i];
        const cap = isFinite(upto) ? upto : Infinity;
        const span = Math.max(0, Math.min(remaining, cap - lastLimit));
        const tax = span * (rate/100);
        totalTax += tax;

        // row
        const tr = document.createElement('tr');
        const label = isFinite(upto) ? `Up to ${fmt06(upto)}` : 'Above';
        tr.innerHTML = `<td>${label}</td>
                        <td class="mono">${fmt06(rounder(els.round.value, span))}</td>
                        <td>${rate.toFixed(2)}%</td>
                        <td class="mono">${fmt06(rounder(els.round.value, tax))}</td>`;
        els.rows.appendChild(tr);

        remaining -= span; lastLimit = cap;
        if(remaining<=0) break;
      }

      // Results
      const period = els.period.value;
      const taxRounded = rounder(els.round.value, totalTax);
      const annualTax = (period==='monthly') ? taxRounded*12 : taxRounded;
      const effective = gross>0 ? (taxRounded/gross)*100 : 0;

      els.sumTax.textContent = fmt06(taxRounded);
      els.rGross.textContent = fmt06(gross);
      els.rTaxable.textContent = fmt06(taxable);
      els.rTax.textContent = (period==='monthly' ? `Rs. ${fmt06(taxRounded)} / month` : `Rs. ${fmt06(taxRounded)} / year`);
      els.rAnnual.textContent = `Rs. ${fmt06(annualTax)} / year`;
      els.rEff.textContent = `${effective.toFixed(2)}%`;
    }

    // ---- Wire events ----
    ['period','salaryFC','fx','relief','round'].forEach(id=>{
      document.getElementById(id).addEventListener('input', e=>{
        if(id==='period'){
          // auto-switch relief between monthly/annual baseline if it exactly matches the default on change
          const isMonthly = e.target.value==='monthly';
          const currentRelief = parseFloat(els.relief.value)||0;
          if(isMonthly && currentRelief===1800000) els.relief.value = 150000;
          if(!isMonthly && currentRelief===150000) els.relief.value = 1800000;
        }
        calc();
      });
    });
    document.getElementById('recalc').onclick = calc;

    // Init
    renderSlabs(); calc();
</script>


<script>
    // =================== Configuration ===================
    // Annual slabs effective 01.04.2025 (editable)
    // Each item: [bandAmountAnnual, rate]
    const CONFIG = {
      reliefAnnual: 1_800_000, // tax-free allowance per year
      slabs: [
        [1_000_000, 0.06], // 6%
        [1_500_000, 0.18], // 18%
        [1_500_000, 0.24], // 24%
        [1_500_000, 0.30], // 30%
        [Infinity, 0.36],  // 36%
      ],
    };

    // =================== Helpers ===================
    const fmt5 = new Intl.NumberFormat("en-LK", { maximumFractionDigits: 2 });
    const fmt50 = new Intl.NumberFormat("en-LK");

    function parseMoneyToNumber(v){
      if(typeof v !== 'string') return Number(v)||0;
      return Number(v.replace(/[^0-9.]/g, '')) || 0;
    }

    function splitSlabsMonthly(monthlyIncome){
      const annual = monthlyIncome * 12;
      const reliefMonthly = CONFIG.reliefAnnual / 12;
      const taxableMonthly = Math.max(0, monthlyIncome - reliefMonthly);

      // Convert annual slabs to monthly sizes
      const monthlySlabs = CONFIG.slabs.map(([amt, rate]) => [
        (amt === Infinity ? Infinity : amt/12), rate
      ]);

      const rows01 = [];
      let remaining = taxableMonthly;
      let idx = 0;
      while(remaining > 0 && idx < monthlySlabs.length){
        const [bandSize, rate] = monthlySlabs[idx];
        const used = Math.min(remaining, bandSize);
        const tax = used * rate;
        rows01.push({
          label: idx===0 ? `First ${fmt50.format(Math.floor(bandSize))} LKR` : (bandSize===Infinity? `Balance` : `Next ${fmt50.format(Math.floor(bandSize))} LKR`),
          ratePct: rate*100,
          amount: used,
          tax,
        });
        remaining -= used;
        idx++;
      }
      return {
        annual,
        reliefMonthly,
        taxableMonthly,
        rows01,
      };
    }

    function updateUI(){
      const inputEl = document.getElementById('monthlyIncome');
      const monthly = parseMoneyToNumber(inputEl.value);

      const { annual, rows01 } = splitSlabsMonthly(monthly);
      const monthlyTax = rows01.reduce((s,r)=>s+r.tax,0);
      const annualTax = monthlyTax*12;

      // Numbers panel
      document.getElementById('outMonthlyIncome').textContent = `Rs. ${fmt50.format(Math.round(monthly))}`;
      document.getElementById('outAnnualIncome').textContent = `Rs. ${fmt50.format(Math.round(annual))}`;
      document.getElementById('outMonthlyTax').textContent = `Rs. ${fmt5.format(monthlyTax)}`;
      document.getElementById('outAnnualTax').textContent = `Rs. ${fmt5.format(annualTax)}`;

      // Relief tag
      document.getElementById('reliefTag').textContent = fmt50.format(CONFIG.reliefAnnual/12);

      // Table rows01
      const tbody = document.getElementById('rows01');
      tbody.innerHTML = '';
      if(monthly <= CONFIG.reliefAnnual/12){
        const tr = document.createElement('tr');
        tr.innerHTML = `<td>Up to ${fmt50.format(CONFIG.reliefAnnual/12)}</td><td>Relief</td><td>–</td><td>–</td>`;
        tbody.appendChild(tr);
      } else {
        // Relief row
        const tr0 = document.createElement('tr');
        tr0.innerHTML = `<td>Up to ${fmt50.format(CONFIG.reliefAnnual/12)}</td><td>Relief</td><td>–</td><td>–</td>`;
        tbody.appendChild(tr0);

        rows01.forEach(r => {
          const tr = document.createElement('tr');
          tr.innerHTML = `<td>${r.label}</td><td>${r.ratePct.toFixed(0)}%</td><td>Rs. ${fmt50.format(Math.round(r.amount))}</td><td>Rs. ${fmt5.format(r.tax)}</td>`;
          tbody.appendChild(tr);
        });
      }

      document.getElementById('monthlyTotal').textContent = `Rs. ${fmt5.format(monthlyTax)}`;
    }

    // =================== Events ===================
    const input = document.getElementById('monthlyIncome');
    input.addEventListener('input', (e)=>{
      // keep user's typing while still allowing commas
      const pos = e.target.selectionStart;
      updateUI();
      // Try to preserve caret position
      requestAnimationFrame(()=>{ e.target.selectionStart = e.target.selectionEnd = pos; });
    });

    document.getElementById('resetBtn').addEventListener('click', ()=>{
      input.value = '';
      updateUI();
      input.focus();
    });

    // Demo value
    input.value = '250,000';
    updateUI();
</script>